-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity image_filter_AXIvideo2Mat is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    video_in_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    video_in_TVALID : IN STD_LOGIC;
    video_in_TREADY : OUT STD_LOGIC;
    video_in_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
    video_in_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
    video_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    img_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    img_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_0_V_full_n : IN STD_LOGIC;
    img_data_stream_0_V_write : OUT STD_LOGIC;
    img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_1_V_full_n : IN STD_LOGIC;
    img_data_stream_1_V_write : OUT STD_LOGIC );
end;


architecture behav of image_filter_AXIvideo2Mat is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_pp1_stg0_fsm_4 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_st7_fsm_5 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_st8_fsm_6 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_true : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_26 : BOOLEAN;
    signal eol_1_reg_165 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_1_reg_176 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_3_reg_187 : STD_LOGIC_VECTOR (10 downto 0);
    signal eol_reg_198 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_2_reg_210 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_reg_223 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_bdd_69 : BOOLEAN;
    signal tmp_data_V_reg_356 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_81 : BOOLEAN;
    signal tmp_last_V_reg_364 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_95 : BOOLEAN;
    signal i_V_fu_297_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_380 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond4_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_reg_385 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_106 : BOOLEAN;
    signal brmerge_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_114 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_sig_bdd_124 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal j_V_fu_312_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_fu_327_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_reg_398 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_reg_403 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_147 : BOOLEAN;
    signal ap_sig_bdd_152 : BOOLEAN;
    signal axi_last_V_3_reg_235 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V1_reg_134 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_170 : BOOLEAN;
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_177 : BOOLEAN;
    signal axi_data_V_3_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal axi_data_V1_reg_144 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_s_reg_154 : STD_LOGIC_VECTOR (10 downto 0);
    signal eol_1_phi_fu_168_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_1_phi_fu_179_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal eol_phi_fu_202_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_axi_last_V_2_reg_210pp1_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Val2_s_reg_223pp1_it0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_phi_fu_227_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal eol_2_reg_259 : STD_LOGIC_VECTOR (0 downto 0);
    signal sof_1_fu_86 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_cast_fu_288_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_3_cast_fu_303_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_user_V_fu_279_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_bdd_113 : BOOLEAN;
    signal ap_sig_bdd_200 : BOOLEAN;
    signal ap_sig_bdd_135 : BOOLEAN;
    signal ap_sig_bdd_214 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((exitcond3_fu_292_p2 = ap_const_lv1_0)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond4_fu_307_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond3_fu_292_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_fu_307_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond3_fu_292_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond4_fu_307_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- axi_data_V1_reg_144 assign process. --
    axi_data_V1_reg_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                axi_data_V1_reg_144 <= tmp_data_V_reg_356;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_6)) then 
                axi_data_V1_reg_144 <= axi_data_V_3_reg_247;
            end if; 
        end if;
    end process;

    -- axi_data_V_1_reg_176 assign process. --
    axi_data_V_1_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_reg_385 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                axi_data_V_1_reg_176 <= p_Val2_s_reg_223;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond3_fu_292_p2 = ap_const_lv1_0))) then 
                axi_data_V_1_reg_176 <= axi_data_V1_reg_144;
            end if; 
        end if;
    end process;

    -- axi_data_V_3_reg_247 assign process. --
    axi_data_V_3_reg_247_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond4_fu_307_p2 = ap_const_lv1_0)))) then 
                axi_data_V_3_reg_247 <= axi_data_V_1_phi_fu_179_p4;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5) and (ap_const_lv1_0 = eol_2_reg_259) and not(ap_sig_bdd_152))) then 
                axi_data_V_3_reg_247 <= video_in_TDATA;
            end if; 
        end if;
    end process;

    -- axi_last_V1_reg_134 assign process. --
    axi_last_V1_reg_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                axi_last_V1_reg_134 <= tmp_last_V_reg_364;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_6)) then 
                axi_last_V1_reg_134 <= axi_last_V_3_reg_235;
            end if; 
        end if;
    end process;

    -- axi_last_V_2_reg_210 assign process. --
    axi_last_V_2_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_135) then
                if (ap_sig_bdd_200) then 
                    axi_last_V_2_reg_210 <= eol_1_phi_fu_168_p4;
                elsif (ap_sig_bdd_113) then 
                    axi_last_V_2_reg_210 <= video_in_TLAST;
                elsif ((ap_true = ap_true)) then 
                    axi_last_V_2_reg_210 <= ap_reg_phiprechg_axi_last_V_2_reg_210pp1_it0;
                end if;
            end if; 
        end if;
    end process;

    -- axi_last_V_3_reg_235 assign process. --
    axi_last_V_3_reg_235_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond4_fu_307_p2 = ap_const_lv1_0)))) then 
                axi_last_V_3_reg_235 <= eol_1_phi_fu_168_p4;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5) and (ap_const_lv1_0 = eol_2_reg_259) and not(ap_sig_bdd_152))) then 
                axi_last_V_3_reg_235 <= video_in_TLAST;
            end if; 
        end if;
    end process;

    -- eol_1_reg_165 assign process. --
    eol_1_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_reg_385 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                eol_1_reg_165 <= axi_last_V_2_reg_210;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond3_fu_292_p2 = ap_const_lv1_0))) then 
                eol_1_reg_165 <= axi_last_V1_reg_134;
            end if; 
        end if;
    end process;

    -- eol_2_reg_259 assign process. --
    eol_2_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond4_fu_307_p2 = ap_const_lv1_0)))) then 
                eol_2_reg_259 <= eol_phi_fu_202_p4;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5) and (ap_const_lv1_0 = eol_2_reg_259) and not(ap_sig_bdd_152))) then 
                eol_2_reg_259 <= video_in_TLAST;
            end if; 
        end if;
    end process;

    -- eol_reg_198 assign process. --
    eol_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_reg_385 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                eol_reg_198 <= axi_last_V_2_reg_210;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond3_fu_292_p2 = ap_const_lv1_0))) then 
                eol_reg_198 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    -- p_3_reg_187 assign process. --
    p_3_reg_187_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_fu_307_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                p_3_reg_187 <= j_V_fu_312_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond3_fu_292_p2 = ap_const_lv1_0))) then 
                p_3_reg_187 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- p_Val2_s_reg_223 assign process. --
    p_Val2_s_reg_223_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_135) then
                if (ap_sig_bdd_200) then 
                    p_Val2_s_reg_223 <= axi_data_V_1_phi_fu_179_p4;
                elsif (ap_sig_bdd_113) then 
                    p_Val2_s_reg_223 <= video_in_TDATA;
                elsif ((ap_true = ap_true)) then 
                    p_Val2_s_reg_223 <= ap_reg_phiprechg_p_Val2_s_reg_223pp1_it0;
                end if;
            end if; 
        end if;
    end process;

    -- p_s_reg_154 assign process. --
    p_s_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                p_s_reg_154 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_6)) then 
                p_s_reg_154 <= i_V_reg_380;
            end if; 
        end if;
    end process;

    -- sof_1_fu_86 assign process. --
    sof_1_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_fu_307_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                sof_1_fu_86 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                sof_1_fu_86 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                exitcond4_reg_385 <= exitcond4_fu_307_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                i_V_reg_380 <= i_V_fu_297_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_fu_307_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                tmp_29_reg_398 <= tmp_29_fu_327_p1;
                tmp_4_reg_403 <= p_Val2_s_phi_fu_227_p4(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((video_in_TVALID = ap_const_logic_0)))) then
                tmp_data_V_reg_356 <= video_in_TDATA;
                tmp_last_V_reg_364 <= video_in_TLAST;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, video_in_TVALID, ap_sig_bdd_69, exitcond3_fu_292_p2, exitcond4_fu_307_p2, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_sig_bdd_124, ap_reg_ppiten_pp1_it1, ap_sig_bdd_152, eol_2_reg_259, tmp_user_V_fu_279_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_69)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((not((video_in_TVALID = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_user_V_fu_279_p1))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                elsif ((not((video_in_TVALID = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_user_V_fu_279_p1)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                if (not((exitcond3_fu_292_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_4;
                end if;
            when ap_ST_pp1_stg0_fsm_4 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond4_fu_307_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_4;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond4_fu_307_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_4;
                end if;
            when ap_ST_st7_fsm_5 => 
                if (((ap_const_lv1_0 = eol_2_reg_259) and not(ap_sig_bdd_152))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_5;
                elsif ((not(ap_sig_bdd_152) and not((ap_const_lv1_0 = eol_2_reg_259)))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_5;
                end if;
            when ap_ST_st8_fsm_6 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, exitcond3_fu_292_p2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((exitcond3_fu_292_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(exitcond3_fu_292_p2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((exitcond3_fu_292_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_axi_last_V_2_reg_210pp1_it0 <= "X";
    ap_reg_phiprechg_p_Val2_s_reg_223pp1_it0 <= "XXXXXXXXXXXXXXXX";

    -- ap_sig_bdd_106 assign process. --
    ap_sig_bdd_106_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_106 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_113 assign process. --
    ap_sig_bdd_113_assign_proc : process(exitcond4_fu_307_p2, brmerge_fu_321_p2)
    begin
                ap_sig_bdd_113 <= ((exitcond4_fu_307_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = brmerge_fu_321_p2));
    end process;


    -- ap_sig_bdd_114 assign process. --
    ap_sig_bdd_114_assign_proc : process(video_in_TVALID, exitcond4_fu_307_p2, brmerge_fu_321_p2)
    begin
                ap_sig_bdd_114 <= ((video_in_TVALID = ap_const_logic_0) and (exitcond4_fu_307_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = brmerge_fu_321_p2));
    end process;


    -- ap_sig_bdd_124 assign process. --
    ap_sig_bdd_124_assign_proc : process(img_data_stream_0_V_full_n, img_data_stream_1_V_full_n, exitcond4_reg_385)
    begin
                ap_sig_bdd_124 <= (((img_data_stream_0_V_full_n = ap_const_logic_0) and (exitcond4_reg_385 = ap_const_lv1_0)) or ((exitcond4_reg_385 = ap_const_lv1_0) and (img_data_stream_1_V_full_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_135 assign process. --
    ap_sig_bdd_135_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_sig_bdd_124, ap_reg_ppiten_pp1_it1)
    begin
                ap_sig_bdd_135 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))));
    end process;


    -- ap_sig_bdd_147 assign process. --
    ap_sig_bdd_147_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_147 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_152 assign process. --
    ap_sig_bdd_152_assign_proc : process(video_in_TVALID, eol_2_reg_259)
    begin
                ap_sig_bdd_152 <= ((video_in_TVALID = ap_const_logic_0) and (ap_const_lv1_0 = eol_2_reg_259));
    end process;


    -- ap_sig_bdd_170 assign process. --
    ap_sig_bdd_170_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_170 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_177 assign process. --
    ap_sig_bdd_177_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_177 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_200 assign process. --
    ap_sig_bdd_200_assign_proc : process(exitcond4_fu_307_p2, brmerge_fu_321_p2)
    begin
                ap_sig_bdd_200 <= ((exitcond4_fu_307_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = brmerge_fu_321_p2)));
    end process;


    -- ap_sig_bdd_214 assign process. --
    ap_sig_bdd_214_assign_proc : process(exitcond4_fu_307_p2, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it0)
    begin
                ap_sig_bdd_214 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_fu_307_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0));
    end process;


    -- ap_sig_bdd_26 assign process. --
    ap_sig_bdd_26_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_26 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_69 assign process. --
    ap_sig_bdd_69_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_69 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_81 assign process. --
    ap_sig_bdd_81_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_81 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_95 assign process. --
    ap_sig_bdd_95_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_95 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_4 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_4_assign_proc : process(ap_sig_bdd_106)
    begin
        if (ap_sig_bdd_106) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_26)
    begin
        if (ap_sig_bdd_26) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_81)
    begin
        if (ap_sig_bdd_81) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_177)
    begin
        if (ap_sig_bdd_177) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_95)
    begin
        if (ap_sig_bdd_95) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_5 assign process. --
    ap_sig_cseq_ST_st7_fsm_5_assign_proc : process(ap_sig_bdd_147)
    begin
        if (ap_sig_bdd_147) then 
            ap_sig_cseq_ST_st7_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_6 assign process. --
    ap_sig_cseq_ST_st8_fsm_6_assign_proc : process(ap_sig_bdd_170)
    begin
        if (ap_sig_bdd_170) then 
            ap_sig_cseq_ST_st8_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- axi_data_V_1_phi_fu_179_p4 assign process. --
    axi_data_V_1_phi_fu_179_p4_assign_proc : process(axi_data_V_1_reg_176, p_Val2_s_reg_223, exitcond4_reg_385, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_reg_385 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            axi_data_V_1_phi_fu_179_p4 <= p_Val2_s_reg_223;
        else 
            axi_data_V_1_phi_fu_179_p4 <= axi_data_V_1_reg_176;
        end if; 
    end process;

    brmerge_fu_321_p2 <= (sof_1_fu_86 or eol_phi_fu_202_p4);

    -- eol_1_phi_fu_168_p4 assign process. --
    eol_1_phi_fu_168_p4_assign_proc : process(eol_1_reg_165, axi_last_V_2_reg_210, exitcond4_reg_385, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_reg_385 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            eol_1_phi_fu_168_p4 <= axi_last_V_2_reg_210;
        else 
            eol_1_phi_fu_168_p4 <= eol_1_reg_165;
        end if; 
    end process;


    -- eol_phi_fu_202_p4 assign process. --
    eol_phi_fu_202_p4_assign_proc : process(eol_reg_198, axi_last_V_2_reg_210, exitcond4_reg_385, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_reg_385 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            eol_phi_fu_202_p4 <= axi_last_V_2_reg_210;
        else 
            eol_phi_fu_202_p4 <= eol_reg_198;
        end if; 
    end process;

    exitcond3_fu_292_p2 <= "1" when (p_cast_fu_288_p1 = img_rows_V_read) else "0";
    exitcond4_fu_307_p2 <= "1" when (p_3_cast_fu_303_p1 = img_cols_V_read) else "0";
    i_V_fu_297_p2 <= std_logic_vector(unsigned(p_s_reg_154) + unsigned(ap_const_lv11_1));
    img_data_stream_0_V_din <= tmp_29_reg_398;

    -- img_data_stream_0_V_write assign process. --
    img_data_stream_0_V_write_assign_proc : process(exitcond4_reg_385, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_sig_bdd_124, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_reg_385 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
            img_data_stream_0_V_write <= ap_const_logic_1;
        else 
            img_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_data_stream_1_V_din <= tmp_4_reg_403;

    -- img_data_stream_1_V_write assign process. --
    img_data_stream_1_V_write_assign_proc : process(exitcond4_reg_385, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_sig_bdd_124, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_reg_385 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
            img_data_stream_1_V_write <= ap_const_logic_1;
        else 
            img_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_312_p2 <= std_logic_vector(unsigned(p_3_reg_187) + unsigned(ap_const_lv11_1));
    p_3_cast_fu_303_p1 <= std_logic_vector(resize(unsigned(p_3_reg_187),12));

    -- p_Val2_s_phi_fu_227_p4 assign process. --
    p_Val2_s_phi_fu_227_p4_assign_proc : process(video_in_TDATA, brmerge_fu_321_p2, axi_data_V_1_phi_fu_179_p4, ap_reg_phiprechg_p_Val2_s_reg_223pp1_it0, ap_sig_bdd_214)
    begin
        if (ap_sig_bdd_214) then
            if (not((ap_const_lv1_0 = brmerge_fu_321_p2))) then 
                p_Val2_s_phi_fu_227_p4 <= axi_data_V_1_phi_fu_179_p4;
            elsif ((ap_const_lv1_0 = brmerge_fu_321_p2)) then 
                p_Val2_s_phi_fu_227_p4 <= video_in_TDATA;
            else 
                p_Val2_s_phi_fu_227_p4 <= ap_reg_phiprechg_p_Val2_s_reg_223pp1_it0;
            end if;
        else 
            p_Val2_s_phi_fu_227_p4 <= ap_reg_phiprechg_p_Val2_s_reg_223pp1_it0;
        end if; 
    end process;

    p_cast_fu_288_p1 <= std_logic_vector(resize(unsigned(p_s_reg_154),12));
    tmp_29_fu_327_p1 <= p_Val2_s_phi_fu_227_p4(8 - 1 downto 0);
    tmp_user_V_fu_279_p1 <= video_in_TUSER;

    -- video_in_TREADY assign process. --
    video_in_TREADY_assign_proc : process(video_in_TVALID, ap_sig_cseq_ST_st2_fsm_1, exitcond4_fu_307_p2, ap_sig_cseq_ST_pp1_stg0_fsm_4, brmerge_fu_321_p2, ap_sig_bdd_114, ap_reg_ppiten_pp1_it0, ap_sig_bdd_124, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_st7_fsm_5, ap_sig_bdd_152, eol_2_reg_259)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((video_in_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5) and (ap_const_lv1_0 = eol_2_reg_259) and not(ap_sig_bdd_152)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond4_fu_307_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = brmerge_fu_321_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_114 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_124 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))))) then 
            video_in_TREADY <= ap_const_logic_1;
        else 
            video_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;

end behav;
