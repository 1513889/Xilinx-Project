-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity image_filter_sobel_filter_core is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_0_V_empty_n : IN STD_LOGIC;
    src_data_stream_0_V_read : OUT STD_LOGIC;
    src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_1_V_empty_n : IN STD_LOGIC;
    src_data_stream_1_V_read : OUT STD_LOGIC;
    dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_0_V_full_n : IN STD_LOGIC;
    dst_data_stream_0_V_write : OUT STD_LOGIC;
    dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_1_V_full_n : IN STD_LOGIC;
    dst_data_stream_1_V_write : OUT STD_LOGIC;
    rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    rows_empty_n : IN STD_LOGIC;
    rows_read : OUT STD_LOGIC;
    cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    cols_empty_n : IN STD_LOGIC;
    cols_read : OUT STD_LOGIC;
    C_XR0C0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C0_empty_n : IN STD_LOGIC;
    C_XR0C0_read : OUT STD_LOGIC;
    C_XR0C1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C1_empty_n : IN STD_LOGIC;
    C_XR0C1_read : OUT STD_LOGIC;
    C_XR0C2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C2_empty_n : IN STD_LOGIC;
    C_XR0C2_read : OUT STD_LOGIC;
    C_XR1C0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C0_empty_n : IN STD_LOGIC;
    C_XR1C0_read : OUT STD_LOGIC;
    C_XR1C1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C1_empty_n : IN STD_LOGIC;
    C_XR1C1_read : OUT STD_LOGIC;
    C_XR1C2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C2_empty_n : IN STD_LOGIC;
    C_XR1C2_read : OUT STD_LOGIC;
    C_XR2C0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C0_empty_n : IN STD_LOGIC;
    C_XR2C0_read : OUT STD_LOGIC;
    C_XR2C1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C1_empty_n : IN STD_LOGIC;
    C_XR2C1_read : OUT STD_LOGIC;
    C_XR2C2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C2_empty_n : IN STD_LOGIC;
    C_XR2C2_read : OUT STD_LOGIC;
    C_YR0C0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C0_empty_n : IN STD_LOGIC;
    C_YR0C0_read : OUT STD_LOGIC;
    C_YR0C1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C1_empty_n : IN STD_LOGIC;
    C_YR0C1_read : OUT STD_LOGIC;
    C_YR0C2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C2_empty_n : IN STD_LOGIC;
    C_YR0C2_read : OUT STD_LOGIC;
    C_YR1C0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C0_empty_n : IN STD_LOGIC;
    C_YR1C0_read : OUT STD_LOGIC;
    C_YR1C1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C1_empty_n : IN STD_LOGIC;
    C_YR1C1_read : OUT STD_LOGIC;
    C_YR1C2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C2_empty_n : IN STD_LOGIC;
    C_YR1C2_read : OUT STD_LOGIC;
    C_YR2C0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR2C0_empty_n : IN STD_LOGIC;
    C_YR2C0_read : OUT STD_LOGIC;
    C_YR2C1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR2C1_empty_n : IN STD_LOGIC;
    C_YR2C1_read : OUT STD_LOGIC;
    c_high_thresh_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    c_high_thresh_empty_n : IN STD_LOGIC;
    c_high_thresh_read : OUT STD_LOGIC;
    c_low_thresh_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    c_low_thresh_empty_n : IN STD_LOGIC;
    c_low_thresh_read : OUT STD_LOGIC;
    c_invert_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    c_invert_empty_n : IN STD_LOGIC;
    c_invert_read : OUT STD_LOGIC );
end;


architecture behav of image_filter_sobel_filter_core is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st18_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_FF : STD_LOGIC_VECTOR (15 downto 0) := "0000000011111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal col_assign_reg_395 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_col_assign_reg_395_pp0_it1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_142 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal exitcond_reg_1324 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1324_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1356 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_164 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal or_cond3_i_i_reg_1360 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_197 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppstg_col_assign_reg_395_pp0_it2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_high_thresh_read_reg_1165 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_bdd_254 : BOOLEAN;
    signal c_low_thresh_read_reg_1170 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_cast_i_i_cast_fu_415_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal rows_cast_i_i_cast_reg_1175 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_i_i_cast_fu_425_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_29_i_i_cast_reg_1180 : STD_LOGIC_VECTOR (12 downto 0);
    signal cols_cast_i_i_cast_fu_429_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal cols_cast_i_i_cast_reg_1185 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_30_i_i_cast_fu_439_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_30_i_i_cast_reg_1190 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_3_fu_443_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_reg_1195 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_449_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_reg_1200 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_36_0_i_i_i_fu_523_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_i_i_i_reg_1205 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_i_i_i_fu_527_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_i_i_i_reg_1210 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_1_i_i_i_fu_531_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_1_i_i_i_reg_1215 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_1_i_i_i_fu_535_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_1_i_i_i_reg_1220 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_2_i_i_i_fu_539_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_2_i_i_i_reg_1225 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_2_i_i_i_fu_543_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_2_i_i_i_reg_1230 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_i_i_i_fu_547_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_i_i_i_reg_1235 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_i_i_i_fu_551_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_i_i_i_reg_1240 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_1_i_i_i_fu_555_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_1_i_i_i_reg_1245 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_1_i_i_i_fu_559_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_1_i_i_i_reg_1250 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_2_i_i_i_fu_563_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_2_i_i_i_reg_1255 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_2_i_i_i_fu_567_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_2_i_i_i_reg_1260 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_i_i_i_fu_571_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_i_i_i_reg_1265 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_2_i_i_i_fu_575_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_2_i_i_i_reg_1270 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_1_i_i_i_fu_579_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_1_i_i_i_reg_1275 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_2_1_i_i_i_fu_583_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_2_1_i_i_i_reg_1280 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_2_i_i_i_fu_587_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_2_i_i_i_reg_1285 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_i_i_i_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_i_i_i_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_314 : BOOLEAN;
    signal row_fu_606_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal row_reg_1299 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_i_i_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_i_i_reg_1304 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1309 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_i_i_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_i_i_reg_1314 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_i_i_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_i_i_reg_1319 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1324_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1324_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1324_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_fu_649_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal col_reg_1328 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_37_i_i_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_i_i_reg_1333 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_i_i_fu_660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_i_i_reg_1340 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_38_i_i_reg_1340_pp0_it1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buff_A_val_1_addr_reg_1345 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_buff_A_val_1_addr_reg_1345_pp0_it1 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_cond_i_i_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_i_i_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal buff_A_val_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_1_load_reg_1364 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_reg_1369 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_0_1_load_reg_1375 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1385 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_reg_1390 : STD_LOGIC_VECTOR (0 downto 0);
    signal buff_C_val_2_1_reg_1395 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_0_i_i_load_1_reg_1401 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_0_i_i_load_1_reg_1406 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_2_0_fu_751_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_2_0_reg_1411 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_0_fu_758_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_0_reg_1416 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_0_fu_764_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_0_reg_1421 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond4_i_i_fu_771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_i_i_reg_1426 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal buff_C_val_0_0_i_i_load_reg_1431 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_0_i_i_load_reg_1436 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_0_i_i_i_fu_805_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_0_1_i_i_i_fu_818_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_0_2_i_i_i_fu_831_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_1_i_i_i_fu_845_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_1_1_i_i_i_fu_858_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_1_2_i_i_i_fu_871_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_2_i_i_i_fu_885_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_2_1_i_i_i_fu_898_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_808_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_0_i_i_i_reg_1494 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_813_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_0_i_i_i_reg_1499 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_821_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_0_1_i_i_i_reg_1504 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_826_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_0_1_i_i_i_reg_1509 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_835_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_0_2_i_i_i_reg_1514 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_840_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_0_2_i_i_i_reg_1519 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_848_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_1_i_i_i_reg_1524 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_853_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_1_i_i_i_reg_1529 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_861_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_1_1_i_i_i_reg_1534 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_866_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_1_1_i_i_i_reg_1539 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_875_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_1_2_i_i_i_reg_1544 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_880_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_1_2_i_i_i_reg_1549 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_888_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_2_i_i_i_reg_1554 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_893_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_2_i_i_i_reg_1559 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_901_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_2_1_i_i_i_reg_1564 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_906_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_2_1_i_i_i_reg_1569 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_915_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_2_2_i_i_i_reg_1574 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_940_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_reg_1580 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_fu_946_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_reg_1585 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_fu_954_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_reg_1590 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_fu_967_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_reg_1595 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp12_fu_973_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp12_reg_1600 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp14_fu_981_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp14_reg_1605 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_weight_2_2_2_i_i_i_fu_990_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_weight_2_2_2_i_i_i_reg_1610 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_weight_2_2_2_i_i_i_fu_999_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_weight_2_2_2_i_i_i_reg_1617 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_i_i_i_fu_1014_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_i_i_i_reg_1624 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_i_i_i_fu_1031_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_i_i_i_reg_1629 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_i_i_i_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_i_i_i_reg_1634 : STD_LOGIC_VECTOR (0 downto 0);
    signal edge_val_fu_1052_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_reg_1639 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val1_i_i_i_fu_1058_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val1_i_i_i_reg_1644 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_i_i_i_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_i_i_i_reg_1649 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_i_i_i_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_i_i_i_reg_1655 : STD_LOGIC_VECTOR (0 downto 0);
    signal edge_val_2_i_i_i_fu_1089_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_2_i_i_i_reg_1660 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_1_fu_1096_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_1_reg_1665 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_0_ce0 : STD_LOGIC;
    signal buff_A_val_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_0_ce1 : STD_LOGIC;
    signal buff_A_val_0_we1 : STD_LOGIC;
    signal buff_A_val_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_1_ce0 : STD_LOGIC;
    signal buff_A_val_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_1_ce1 : STD_LOGIC;
    signal buff_A_val_1_we1 : STD_LOGIC;
    signal buff_A_val_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_2_ce0 : STD_LOGIC;
    signal buff_A_val_2_we0 : STD_LOGIC;
    signal buff_A_val_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_2_ce1 : STD_LOGIC;
    signal buff_A_val_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_i_i_reg_384 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_609 : BOOLEAN;
    signal col_assign_phi_fu_399_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_39_i_i_fu_690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_i_i_fu_703_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buff_C_val_1_0_1_fu_124 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_0_i_i_fu_128 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_1_i_i_fu_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_0_1_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_0_i_i_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_1_i_i_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_2_1_i_i_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_2_0_i_i_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_407_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_29_i_i_fu_419_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_411_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_i_i_fu_433_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_455_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_491_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_459_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_495_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_463_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_499_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_467_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_503_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_471_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_507_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_475_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_511_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_479_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_515_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_483_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_519_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_487_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_617_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_cast_cast_i_i_fu_597_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_43_i_i_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_708_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_cast_cast_i_i_fu_686_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp1_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_i_i_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_808_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_808_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_813_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_813_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_821_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_821_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_826_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_826_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_835_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_835_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_840_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_840_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_848_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_848_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_853_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_853_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_861_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_861_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_866_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_866_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_875_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_875_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_880_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_880_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_888_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_888_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_893_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_893_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_901_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_901_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_906_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_906_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_915_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_915_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_fu_932_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_936_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_950_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp9_fu_959_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp10_fu_963_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp13_fu_977_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp8_fu_986_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp15_fu_995_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_i_i_i_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_i_i_fu_1009_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_i_i_i_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_i_i_fu_1026_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_weight_fu_1038_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_fu_1048_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_i_i_i_fu_1064_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_edge_val_i_i_i_fu_1078_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_3_fu_1102_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_808_ce : STD_LOGIC;
    signal grp_fu_813_ce : STD_LOGIC;
    signal grp_fu_821_ce : STD_LOGIC;
    signal grp_fu_826_ce : STD_LOGIC;
    signal grp_fu_835_ce : STD_LOGIC;
    signal grp_fu_840_ce : STD_LOGIC;
    signal grp_fu_848_ce : STD_LOGIC;
    signal grp_fu_853_ce : STD_LOGIC;
    signal grp_fu_861_ce : STD_LOGIC;
    signal grp_fu_866_ce : STD_LOGIC;
    signal grp_fu_875_ce : STD_LOGIC;
    signal grp_fu_880_ce : STD_LOGIC;
    signal grp_fu_888_ce : STD_LOGIC;
    signal grp_fu_893_ce : STD_LOGIC;
    signal grp_fu_901_ce : STD_LOGIC;
    signal grp_fu_906_ce : STD_LOGIC;
    signal grp_fu_915_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_915_p10 : STD_LOGIC_VECTOR (15 downto 0);

    component image_filter_mul_8s_8ns_16_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component image_filter_sobel_filter_core_buff_A_val_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component image_filter_sobel_filter_core_buff_A_val_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buff_A_val_0_U : component image_filter_sobel_filter_core_buff_A_val_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A_val_0_address0,
        ce0 => buff_A_val_0_ce0,
        q0 => buff_A_val_0_q0,
        address1 => buff_A_val_0_address1,
        ce1 => buff_A_val_0_ce1,
        we1 => buff_A_val_0_we1,
        d1 => buff_A_val_0_d1);

    buff_A_val_1_U : component image_filter_sobel_filter_core_buff_A_val_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A_val_1_address0,
        ce0 => buff_A_val_1_ce0,
        q0 => buff_A_val_1_q0,
        address1 => buff_A_val_1_address1,
        ce1 => buff_A_val_1_ce1,
        we1 => buff_A_val_1_we1,
        d1 => buff_A_val_1_d1);

    buff_A_val_2_U : component image_filter_sobel_filter_core_buff_A_val_2
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A_val_2_address0,
        ce0 => buff_A_val_2_ce0,
        we0 => buff_A_val_2_we0,
        d0 => buff_A_val_2_d0,
        address1 => buff_A_val_2_address1,
        ce1 => buff_A_val_2_ce1,
        q1 => buff_A_val_2_q1);

    image_filter_mul_8s_8ns_16_3_U58 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_808_p0,
        din1 => grp_fu_808_p1,
        ce => grp_fu_808_ce,
        dout => grp_fu_808_p2);

    image_filter_mul_8s_8ns_16_3_U59 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_813_p0,
        din1 => grp_fu_813_p1,
        ce => grp_fu_813_ce,
        dout => grp_fu_813_p2);

    image_filter_mul_8s_8ns_16_3_U60 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_821_p0,
        din1 => grp_fu_821_p1,
        ce => grp_fu_821_ce,
        dout => grp_fu_821_p2);

    image_filter_mul_8s_8ns_16_3_U61 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_826_p0,
        din1 => grp_fu_826_p1,
        ce => grp_fu_826_ce,
        dout => grp_fu_826_p2);

    image_filter_mul_8s_8ns_16_3_U62 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_835_p0,
        din1 => grp_fu_835_p1,
        ce => grp_fu_835_ce,
        dout => grp_fu_835_p2);

    image_filter_mul_8s_8ns_16_3_U63 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_840_p0,
        din1 => grp_fu_840_p1,
        ce => grp_fu_840_ce,
        dout => grp_fu_840_p2);

    image_filter_mul_8s_8ns_16_3_U64 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_848_p0,
        din1 => grp_fu_848_p1,
        ce => grp_fu_848_ce,
        dout => grp_fu_848_p2);

    image_filter_mul_8s_8ns_16_3_U65 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_853_p0,
        din1 => grp_fu_853_p1,
        ce => grp_fu_853_ce,
        dout => grp_fu_853_p2);

    image_filter_mul_8s_8ns_16_3_U66 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_861_p0,
        din1 => grp_fu_861_p1,
        ce => grp_fu_861_ce,
        dout => grp_fu_861_p2);

    image_filter_mul_8s_8ns_16_3_U67 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_866_p0,
        din1 => grp_fu_866_p1,
        ce => grp_fu_866_ce,
        dout => grp_fu_866_p2);

    image_filter_mul_8s_8ns_16_3_U68 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_875_p0,
        din1 => grp_fu_875_p1,
        ce => grp_fu_875_ce,
        dout => grp_fu_875_p2);

    image_filter_mul_8s_8ns_16_3_U69 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_880_p0,
        din1 => grp_fu_880_p1,
        ce => grp_fu_880_ce,
        dout => grp_fu_880_p2);

    image_filter_mul_8s_8ns_16_3_U70 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_888_p0,
        din1 => grp_fu_888_p1,
        ce => grp_fu_888_ce,
        dout => grp_fu_888_p2);

    image_filter_mul_8s_8ns_16_3_U71 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_893_p0,
        din1 => grp_fu_893_p1,
        ce => grp_fu_893_ce,
        dout => grp_fu_893_p2);

    image_filter_mul_8s_8ns_16_3_U72 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_901_p0,
        din1 => grp_fu_901_p1,
        ce => grp_fu_901_ce,
        dout => grp_fu_901_p2);

    image_filter_mul_8s_8ns_16_3_U73 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_906_p0,
        din1 => grp_fu_906_p1,
        ce => grp_fu_906_ce,
        dout => grp_fu_906_p2);

    image_filter_mul_8s_8ns_16_3_U74 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_915_p0,
        din1 => grp_fu_915_p1,
        ce => grp_fu_915_ce,
        dout => grp_fu_915_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_601_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and not((ap_const_lv1_0 = exitcond_fu_644_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_601_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_601_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it13 assign process. --
    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it14 assign process. --
    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_601_p2))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3))) then 
                        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) then 
                        ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- col_assign_reg_395 assign process. --
    col_assign_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (exitcond_reg_1324 = ap_const_lv1_0))) then 
                col_assign_reg_395 <= col_reg_1328;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_601_p2))) then 
                col_assign_reg_395 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- row_i_i_reg_384 assign process. --
    row_i_i_reg_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_3)) then 
                row_i_i_reg_384 <= row_reg_1299;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
                row_i_i_reg_384 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then
                ap_reg_ppstg_buff_A_val_1_addr_reg_1345_pp0_it1 <= buff_A_val_1_addr_reg_1345;
                ap_reg_ppstg_col_assign_reg_395_pp0_it1 <= col_assign_reg_395;
                ap_reg_ppstg_exitcond_reg_1324_pp0_it1 <= exitcond_reg_1324;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it1 <= or_cond3_i_i_reg_1360;
                ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it1 <= or_cond_i_i_reg_1356;
                ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it1 <= tmp_37_i_i_reg_1333;
                    ap_reg_ppstg_tmp_38_i_i_reg_1340_pp0_it1(11 downto 0) <= tmp_38_i_i_reg_1340(11 downto 0);
                exitcond_reg_1324 <= exitcond_fu_644_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))) then
                ap_reg_ppstg_col_assign_reg_395_pp0_it2 <= ap_reg_ppstg_col_assign_reg_395_pp0_it1;
                ap_reg_ppstg_exitcond_reg_1324_pp0_it2 <= ap_reg_ppstg_exitcond_reg_1324_pp0_it1;
                ap_reg_ppstg_exitcond_reg_1324_pp0_it3 <= ap_reg_ppstg_exitcond_reg_1324_pp0_it2;
                ap_reg_ppstg_exitcond_reg_1324_pp0_it4 <= ap_reg_ppstg_exitcond_reg_1324_pp0_it3;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it10 <= ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it9;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it11 <= ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it10;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it12 <= ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it11;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it13 <= ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it12;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it2 <= ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it1;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it3 <= ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it2;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it4 <= ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it3;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it5 <= ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it4;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it6 <= ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it5;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it7 <= ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it6;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it8 <= ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it7;
                ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it9 <= ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it8;
                ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it10 <= ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it9;
                ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it11 <= ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it10;
                ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it12 <= ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it11;
                ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it13 <= ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it12;
                ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it5 <= or_cond4_i_i_reg_1426;
                ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it6 <= ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it5;
                ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it7 <= ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it6;
                ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it8 <= ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it7;
                ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it9 <= ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it8;
                ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it2 <= ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it1;
                ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it2 <= ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it1;
                ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it3 <= ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it2;
                buff_C_val_2_1_reg_1395 <= buff_C_val_2_0_i_i_fu_152;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = exitcond_fu_644_p2) and not((ap_const_lv1_0 = tmp_37_i_i_fu_655_p2)))) then
                buff_A_val_1_addr_reg_1345 <= tmp_38_i_i_fu_660_p1(11 - 1 downto 0);
                    tmp_38_i_i_reg_1340(11 downto 0) <= tmp_38_i_i_fu_660_p1(11 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (exitcond_reg_1324 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_37_i_i_reg_1333)))) then
                buff_A_val_1_load_reg_1364 <= buff_A_val_1_q0;
                temp_reg_1369 <= buff_A_val_0_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_ppstg_exitcond_reg_1324_pp0_it2 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it2)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then
                buff_C_val_0_0_1_fu_136 <= src_data_stream_0_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1324_pp0_it3))) then
                buff_C_val_0_0_i_i_fu_128 <= buff_C_val_0_0_fu_764_p3;
                buff_C_val_1_0_i_i_fu_140 <= buff_C_val_1_0_fu_758_p3;
                buff_C_val_2_0_i_i_fu_152 <= buff_C_val_2_0_fu_751_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1324_pp0_it3))) then
                buff_C_val_0_0_i_i_load_1_reg_1401 <= buff_C_val_0_0_i_i_fu_128;
                buff_C_val_0_0_i_i_load_reg_1431 <= buff_C_val_0_0_i_i_fu_128;
                buff_C_val_0_0_reg_1421 <= buff_C_val_0_0_fu_764_p3;
                buff_C_val_1_0_i_i_load_1_reg_1406 <= buff_C_val_1_0_i_i_fu_140;
                buff_C_val_1_0_i_i_load_reg_1436 <= buff_C_val_1_0_i_i_fu_140;
                buff_C_val_1_0_reg_1416 <= buff_C_val_1_0_fu_758_p3;
                buff_C_val_2_0_reg_1411 <= buff_C_val_2_0_fu_751_p3;
                or_cond4_i_i_reg_1426 <= or_cond4_i_i_fu_771_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1324_pp0_it4))) then
                buff_C_val_0_1_i_i_fu_132 <= buff_C_val_0_0_i_i_load_reg_1431;
                buff_C_val_1_1_i_i_fu_144 <= buff_C_val_1_0_i_i_load_reg_1436;
                buff_C_val_2_1_i_i_fu_148 <= buff_C_val_2_1_reg_1395;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1324_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it1)))) then
                buff_C_val_1_0_1_fu_124 <= temp_reg_1369;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_ppstg_exitcond_reg_1324_pp0_it2 = ap_const_lv1_0) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it2)))) then
                buff_C_val_1_0_1_load_reg_1375 <= buff_C_val_1_0_1_fu_124;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then
                c_high_thresh_read_reg_1165 <= c_high_thresh_dout;
                c_low_thresh_read_reg_1170 <= c_low_thresh_dout;
                    cols_cast_i_i_cast_reg_1185(10 downto 0) <= cols_cast_i_i_cast_fu_429_p1(10 downto 0);
                    rows_cast_i_i_cast_reg_1175(10 downto 0) <= rows_cast_i_i_cast_fu_415_p1(10 downto 0);
                tmp_28_i_i_i_reg_1290 <= tmp_28_i_i_i_fu_591_p2;
                tmp_29_i_i_cast_reg_1180 <= tmp_29_i_i_cast_fu_425_p1;
                tmp_30_i_i_cast_reg_1190 <= tmp_30_i_i_cast_fu_439_p1;
                tmp_36_0_1_i_i_i_reg_1215 <= tmp_36_0_1_i_i_i_fu_531_p1;
                tmp_36_0_2_i_i_i_reg_1225 <= tmp_36_0_2_i_i_i_fu_539_p1;
                tmp_36_0_i_i_i_reg_1205 <= tmp_36_0_i_i_i_fu_523_p1;
                tmp_36_1_1_i_i_i_reg_1245 <= tmp_36_1_1_i_i_i_fu_555_p1;
                tmp_36_1_2_i_i_i_reg_1255 <= tmp_36_1_2_i_i_i_fu_563_p1;
                tmp_36_1_i_i_i_reg_1235 <= tmp_36_1_i_i_i_fu_547_p1;
                tmp_36_2_1_i_i_i_reg_1275 <= tmp_36_2_1_i_i_i_fu_579_p1;
                tmp_36_2_2_i_i_i_reg_1285 <= tmp_36_2_2_i_i_i_fu_587_p1;
                tmp_36_2_i_i_i_reg_1265 <= tmp_36_2_i_i_i_fu_571_p1;
                tmp_38_0_1_i_i_i_reg_1220 <= tmp_38_0_1_i_i_i_fu_535_p1;
                tmp_38_0_2_i_i_i_reg_1230 <= tmp_38_0_2_i_i_i_fu_543_p1;
                tmp_38_0_i_i_i_reg_1210 <= tmp_38_0_i_i_i_fu_527_p1;
                tmp_38_1_1_i_i_i_reg_1250 <= tmp_38_1_1_i_i_i_fu_559_p1;
                tmp_38_1_2_i_i_i_reg_1260 <= tmp_38_1_2_i_i_i_fu_567_p1;
                tmp_38_1_i_i_i_reg_1240 <= tmp_38_1_i_i_i_fu_551_p1;
                tmp_38_2_1_i_i_i_reg_1280 <= tmp_38_2_1_i_i_i_fu_583_p1;
                tmp_38_2_i_i_i_reg_1270 <= tmp_38_2_i_i_i_fu_575_p1;
                tmp_3_reg_1195 <= tmp_3_fu_443_p2;
                tmp_6_reg_1200 <= tmp_6_fu_449_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then
                col_reg_1328 <= col_fu_649_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it11))) then
                edge_val1_i_i_i_reg_1644 <= edge_val1_i_i_i_fu_1058_p3;
                tmp_26_i_i_i_reg_1649 <= tmp_26_i_i_i_fu_1068_p2;
                tmp_27_i_i_i_reg_1655 <= tmp_27_i_i_i_fu_1073_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it12) and not((ap_const_lv1_0 = tmp_28_i_i_i_reg_1290)))) then
                edge_val_1_reg_1665 <= edge_val_1_fu_1096_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it12))) then
                edge_val_2_i_i_i_reg_1660 <= edge_val_2_i_i_i_fu_1089_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it10))) then
                edge_val_reg_1639 <= edge_val_fu_1052_p2;
                tmp_23_i_i_i_reg_1634 <= tmp_23_i_i_i_fu_1042_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond1_fu_601_p2))) then
                icmp_reg_1309 <= icmp_fu_627_p2;
                tmp_32_i_i_reg_1304 <= tmp_32_i_i_fu_612_p2;
                tmp_34_i_i_reg_1314 <= tmp_34_i_i_fu_633_p2;
                tmp_35_i_i_reg_1319 <= tmp_35_i_i_fu_639_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = exitcond_fu_644_p2))) then
                or_cond3_i_i_reg_1360 <= or_cond3_i_i_fu_677_p2;
                or_cond_i_i_reg_1356 <= or_cond_i_i_fu_666_p2;
                tmp_37_i_i_reg_1333 <= tmp_37_i_i_fu_655_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                row_reg_1299 <= row_fu_606_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it7))) then
                tmp11_reg_1595 <= tmp11_fu_967_p2;
                tmp12_reg_1600 <= tmp12_fu_973_p2;
                tmp14_reg_1605 <= tmp14_fu_981_p2;
                tmp4_reg_1580 <= tmp4_fu_940_p2;
                tmp5_reg_1585 <= tmp5_fu_946_p2;
                tmp7_reg_1590 <= tmp7_fu_954_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_ppstg_exitcond_reg_1324_pp0_it2 = ap_const_lv1_0) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then
                tmp1_reg_1390 <= tmp1_fu_734_p2;
                tmp_reg_1385 <= tmp_fu_729_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it9))) then
                tmp_19_i_i_i_reg_1624 <= tmp_19_i_i_i_fu_1014_p3;
                tmp_22_i_i_i_reg_1629 <= tmp_22_i_i_i_fu_1031_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it6))) then
                tmp_37_0_1_i_i_i_reg_1504 <= grp_fu_821_p2;
                tmp_37_0_2_i_i_i_reg_1514 <= grp_fu_835_p2;
                tmp_37_0_i_i_i_reg_1494 <= grp_fu_808_p2;
                tmp_37_1_1_i_i_i_reg_1534 <= grp_fu_861_p2;
                tmp_37_1_2_i_i_i_reg_1544 <= grp_fu_875_p2;
                tmp_37_1_i_i_i_reg_1524 <= grp_fu_848_p2;
                tmp_37_2_1_i_i_i_reg_1564 <= grp_fu_901_p2;
                tmp_37_2_2_i_i_i_reg_1574 <= grp_fu_915_p2;
                tmp_37_2_i_i_i_reg_1554 <= grp_fu_888_p2;
                tmp_39_0_1_i_i_i_reg_1509 <= grp_fu_826_p2;
                tmp_39_0_2_i_i_i_reg_1519 <= grp_fu_840_p2;
                tmp_39_0_i_i_i_reg_1499 <= grp_fu_813_p2;
                tmp_39_1_1_i_i_i_reg_1539 <= grp_fu_866_p2;
                tmp_39_1_2_i_i_i_reg_1549 <= grp_fu_880_p2;
                tmp_39_1_i_i_i_reg_1529 <= grp_fu_853_p2;
                tmp_39_2_1_i_i_i_reg_1569 <= grp_fu_906_p2;
                tmp_39_2_i_i_i_reg_1559 <= grp_fu_893_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it8))) then
                x_weight_2_2_2_i_i_i_reg_1610 <= x_weight_2_2_2_i_i_i_fu_990_p2;
                y_weight_2_2_2_i_i_i_reg_1617 <= y_weight_2_2_2_i_i_i_fu_999_p2;
            end if;
        end if;
    end process;
    rows_cast_i_i_cast_reg_1175(11) <= '0';
    cols_cast_i_i_cast_reg_1185(11) <= '0';
    tmp_38_i_i_reg_1340(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_38_i_i_reg_1340_pp0_it1(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_reg_ppiten_pp0_it13, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14, ap_sig_bdd_254, exitcond1_fu_601_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_254)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_601_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it14) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it13)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it14) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it13))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it5))))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st18_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    -- C_XR0C0_read assign process. --
    C_XR0C0_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_XR0C0_read <= ap_const_logic_1;
        else 
            C_XR0C0_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_XR0C1_read assign process. --
    C_XR0C1_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_XR0C1_read <= ap_const_logic_1;
        else 
            C_XR0C1_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_XR0C2_read assign process. --
    C_XR0C2_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_XR0C2_read <= ap_const_logic_1;
        else 
            C_XR0C2_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_XR1C0_read assign process. --
    C_XR1C0_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_XR1C0_read <= ap_const_logic_1;
        else 
            C_XR1C0_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_XR1C1_read assign process. --
    C_XR1C1_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_XR1C1_read <= ap_const_logic_1;
        else 
            C_XR1C1_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_XR1C2_read assign process. --
    C_XR1C2_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_XR1C2_read <= ap_const_logic_1;
        else 
            C_XR1C2_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_XR2C0_read assign process. --
    C_XR2C0_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_XR2C0_read <= ap_const_logic_1;
        else 
            C_XR2C0_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_XR2C1_read assign process. --
    C_XR2C1_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_XR2C1_read <= ap_const_logic_1;
        else 
            C_XR2C1_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_XR2C2_read assign process. --
    C_XR2C2_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_XR2C2_read <= ap_const_logic_1;
        else 
            C_XR2C2_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_YR0C0_read assign process. --
    C_YR0C0_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_YR0C0_read <= ap_const_logic_1;
        else 
            C_YR0C0_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_YR0C1_read assign process. --
    C_YR0C1_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_YR0C1_read <= ap_const_logic_1;
        else 
            C_YR0C1_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_YR0C2_read assign process. --
    C_YR0C2_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_YR0C2_read <= ap_const_logic_1;
        else 
            C_YR0C2_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_YR1C0_read assign process. --
    C_YR1C0_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_YR1C0_read <= ap_const_logic_1;
        else 
            C_YR1C0_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_YR1C1_read assign process. --
    C_YR1C1_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_YR1C1_read <= ap_const_logic_1;
        else 
            C_YR1C1_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_YR1C2_read assign process. --
    C_YR1C2_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_YR1C2_read <= ap_const_logic_1;
        else 
            C_YR1C2_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_YR2C0_read assign process. --
    C_YR2C0_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_YR2C0_read <= ap_const_logic_1;
        else 
            C_YR2C0_read <= ap_const_logic_0;
        end if; 
    end process;


    -- C_YR2C1_read assign process. --
    C_YR2C1_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            C_YR2C1_read <= ap_const_logic_1;
        else 
            C_YR2C1_read <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, exitcond1_fu_601_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_601_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(exitcond1_fu_601_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond1_fu_601_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_142 assign process. --
    ap_sig_bdd_142_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_142 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_164 assign process. --
    ap_sig_bdd_164_assign_proc : process(src_data_stream_0_V_empty_n, src_data_stream_1_V_empty_n, ap_reg_ppstg_exitcond_reg_1324_pp0_it2, ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it2)
    begin
                ap_sig_bdd_164 <= (((src_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_reg_ppstg_exitcond_reg_1324_pp0_it2 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it2))) or ((ap_reg_ppstg_exitcond_reg_1324_pp0_it2 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it2)) and (src_data_stream_1_V_empty_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_197 assign process. --
    ap_sig_bdd_197_assign_proc : process(dst_data_stream_0_V_full_n, dst_data_stream_1_V_full_n, ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it13)
    begin
                ap_sig_bdd_197 <= (((dst_data_stream_0_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it13))) or (not((ap_const_lv1_0 = ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it13)) and (dst_data_stream_1_V_full_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_254 assign process. --
    ap_sig_bdd_254_assign_proc : process(ap_start, ap_done_reg, rows_empty_n, cols_empty_n, C_XR0C0_empty_n, C_XR0C1_empty_n, C_XR0C2_empty_n, C_XR1C0_empty_n, C_XR1C1_empty_n, C_XR1C2_empty_n, C_XR2C0_empty_n, C_XR2C1_empty_n, C_XR2C2_empty_n, C_YR0C0_empty_n, C_YR0C1_empty_n, C_YR0C2_empty_n, C_YR1C0_empty_n, C_YR1C1_empty_n, C_YR1C2_empty_n, C_YR2C0_empty_n, C_YR2C1_empty_n, c_high_thresh_empty_n, c_low_thresh_empty_n, c_invert_empty_n)
    begin
                ap_sig_bdd_254 <= ((rows_empty_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (C_XR0C0_empty_n = ap_const_logic_0) or (C_XR0C1_empty_n = ap_const_logic_0) or (C_XR0C2_empty_n = ap_const_logic_0) or (C_XR1C0_empty_n = ap_const_logic_0) or (C_XR1C1_empty_n = ap_const_logic_0) or (C_XR1C2_empty_n = ap_const_logic_0) or (C_XR2C0_empty_n = ap_const_logic_0) or (C_XR2C1_empty_n = ap_const_logic_0) or (C_XR2C2_empty_n = ap_const_logic_0) or (C_YR0C0_empty_n = ap_const_logic_0) or (C_YR0C1_empty_n = ap_const_logic_0) or (C_YR0C2_empty_n = ap_const_logic_0) or (C_YR1C0_empty_n = ap_const_logic_0) or (C_YR1C1_empty_n = ap_const_logic_0) or (C_YR1C2_empty_n = ap_const_logic_0) or (C_YR2C0_empty_n = ap_const_logic_0) or (C_YR2C1_empty_n = ap_const_logic_0) or (c_high_thresh_empty_n = ap_const_logic_0) or (c_low_thresh_empty_n = ap_const_logic_0) or (c_invert_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_314 assign process. --
    ap_sig_bdd_314_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_314 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_609 assign process. --
    ap_sig_bdd_609_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_609 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_bdd_142)
    begin
        if (ap_sig_bdd_142) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st18_fsm_3 assign process. --
    ap_sig_cseq_ST_st18_fsm_3_assign_proc : process(ap_sig_bdd_609)
    begin
        if (ap_sig_bdd_609) then 
            ap_sig_cseq_ST_st18_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_314)
    begin
        if (ap_sig_bdd_314) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_0_address0 <= tmp_38_i_i_fu_660_p1(11 - 1 downto 0);
    buff_A_val_0_address1 <= tmp_39_i_i_fu_690_p1(11 - 1 downto 0);

    -- buff_A_val_0_ce0 assign process. --
    buff_A_val_0_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            buff_A_val_0_ce0 <= ap_const_logic_1;
        else 
            buff_A_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- buff_A_val_0_ce1 assign process. --
    buff_A_val_0_ce1_assign_proc : process(ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            buff_A_val_0_ce1 <= ap_const_logic_1;
        else 
            buff_A_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_0_d1 <= src_data_stream_0_V_dout;

    -- buff_A_val_0_we1 assign process. --
    buff_A_val_0_we1_assign_proc : process(ap_reg_ppstg_exitcond_reg_1324_pp0_it2, ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if ((((ap_reg_ppstg_exitcond_reg_1324_pp0_it2 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it2)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14))))))) then 
            buff_A_val_0_we1 <= ap_const_logic_1;
        else 
            buff_A_val_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_1_address0 <= tmp_38_i_i_fu_660_p1(11 - 1 downto 0);
    buff_A_val_1_address1 <= ap_reg_ppstg_buff_A_val_1_addr_reg_1345_pp0_it1;

    -- buff_A_val_1_ce0 assign process. --
    buff_A_val_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            buff_A_val_1_ce0 <= ap_const_logic_1;
        else 
            buff_A_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- buff_A_val_1_ce1 assign process. --
    buff_A_val_1_ce1_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            buff_A_val_1_ce1 <= ap_const_logic_1;
        else 
            buff_A_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_1_d1 <= temp_reg_1369;

    -- buff_A_val_1_we1 assign process. --
    buff_A_val_1_we1_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14, ap_reg_ppstg_exitcond_reg_1324_pp0_it1, ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1324_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it1))))) then 
            buff_A_val_1_we1 <= ap_const_logic_1;
        else 
            buff_A_val_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_2_address0 <= ap_reg_ppstg_tmp_38_i_i_reg_1340_pp0_it1(11 - 1 downto 0);
    buff_A_val_2_address1 <= tmp_40_i_i_fu_703_p1(11 - 1 downto 0);

    -- buff_A_val_2_ce0 assign process. --
    buff_A_val_2_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            buff_A_val_2_ce0 <= ap_const_logic_1;
        else 
            buff_A_val_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- buff_A_val_2_ce1 assign process. --
    buff_A_val_2_ce1_assign_proc : process(ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            buff_A_val_2_ce1 <= ap_const_logic_1;
        else 
            buff_A_val_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_2_d0 <= buff_A_val_1_load_reg_1364;

    -- buff_A_val_2_we0 assign process. --
    buff_A_val_2_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14, ap_reg_ppstg_exitcond_reg_1324_pp0_it1, ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1324_pp0_it1) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it1))))) then 
            buff_A_val_2_we0 <= ap_const_logic_1;
        else 
            buff_A_val_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    buff_C_val_0_0_fu_764_p3 <= 
        buff_C_val_0_0_1_fu_136 when (ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it3(0) = '1') else 
        buff_C_val_0_0_i_i_fu_128;
    buff_C_val_1_0_fu_758_p3 <= 
        buff_C_val_1_0_1_load_reg_1375 when (ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it3(0) = '1') else 
        buff_C_val_1_0_i_i_fu_140;
    buff_C_val_2_0_fu_751_p3 <= 
        buff_A_val_2_q1 when (ap_reg_ppstg_tmp_37_i_i_reg_1333_pp0_it3(0) = '1') else 
        buff_C_val_2_0_i_i_fu_152;

    -- c_high_thresh_read assign process. --
    c_high_thresh_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            c_high_thresh_read <= ap_const_logic_1;
        else 
            c_high_thresh_read <= ap_const_logic_0;
        end if; 
    end process;


    -- c_invert_read assign process. --
    c_invert_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            c_invert_read <= ap_const_logic_1;
        else 
            c_invert_read <= ap_const_logic_0;
        end if; 
    end process;


    -- c_low_thresh_read assign process. --
    c_low_thresh_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            c_low_thresh_read <= ap_const_logic_1;
        else 
            c_low_thresh_read <= ap_const_logic_0;
        end if; 
    end process;

    col_assign_cast_cast_i_i_fu_686_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_col_assign_reg_395_pp0_it2),13));

    -- col_assign_phi_fu_399_p4 assign process. --
    col_assign_phi_fu_399_p4_assign_proc : process(col_assign_reg_395, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_1324, col_reg_1328)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_1324 = ap_const_lv1_0))) then 
            col_assign_phi_fu_399_p4 <= col_reg_1328;
        else 
            col_assign_phi_fu_399_p4 <= col_assign_reg_395;
        end if; 
    end process;

    col_fu_649_p2 <= std_logic_vector(unsigned(col_assign_phi_fu_399_p4) + unsigned(ap_const_lv12_1));
    cols_cast_i_i_cast_fu_429_p1 <= std_logic_vector(resize(unsigned(tmp_2_fu_411_p1),12));

    -- cols_read assign process. --
    cols_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            cols_read <= ap_const_logic_1;
        else 
            cols_read <= ap_const_logic_0;
        end if; 
    end process;

    dst_data_stream_0_V_din <= 
        ap_const_lv8_0 when (ap_reg_ppstg_or_cond4_i_i_reg_1426_pp0_it13(0) = '1') else 
        edge_val_3_fu_1102_p3;

    -- dst_data_stream_0_V_write assign process. --
    dst_data_stream_0_V_write_assign_proc : process(ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it13, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it13)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            dst_data_stream_0_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    dst_data_stream_1_V_din <= ap_const_lv8_80;

    -- dst_data_stream_1_V_write assign process. --
    dst_data_stream_1_V_write_assign_proc : process(ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it13, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond3_i_i_reg_1360_pp0_it13)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            dst_data_stream_1_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    edge_val1_i_i_i_fu_1058_p3 <= 
        edge_val_reg_1639 when (tmp_23_i_i_i_reg_1634(0) = '1') else 
        ap_const_lv8_0;
    edge_val_1_fu_1096_p2 <= (edge_val_2_i_i_i_fu_1089_p3 xor ap_const_lv8_FF);
    edge_val_2_i_i_i_fu_1089_p3 <= 
        p_edge_val_i_i_i_fu_1078_p3 when (tmp_s_fu_1085_p2(0) = '1') else 
        edge_val1_i_i_i_reg_1644;
    edge_val_3_fu_1102_p3 <= 
        edge_val_1_reg_1665 when (tmp_28_i_i_i_reg_1290(0) = '1') else 
        edge_val_2_i_i_i_reg_1660;
    edge_val_fu_1052_p2 <= (tmp_26_fu_1048_p1 xor ap_const_lv8_FF);
    edge_weight_fu_1038_p2 <= std_logic_vector(unsigned(tmp_22_i_i_i_reg_1629) + unsigned(tmp_19_i_i_i_reg_1624));
    exitcond1_fu_601_p2 <= "1" when (row_i_i_reg_384 = tmp_6_reg_1200) else "0";
    exitcond_fu_644_p2 <= "1" when (col_assign_phi_fu_399_p4 = tmp_3_reg_1195) else "0";

    -- grp_fu_808_ce assign process. --
    grp_fu_808_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_808_ce <= ap_const_logic_1;
        else 
            grp_fu_808_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_808_p0 <= tmp_36_0_i_i_i_reg_1205(8 - 1 downto 0);
    grp_fu_808_p1 <= tmp_35_0_i_i_i_fu_805_p1(8 - 1 downto 0);

    -- grp_fu_813_ce assign process. --
    grp_fu_813_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_813_ce <= ap_const_logic_1;
        else 
            grp_fu_813_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_813_p0 <= tmp_38_0_i_i_i_reg_1210(8 - 1 downto 0);
    grp_fu_813_p1 <= tmp_35_0_i_i_i_fu_805_p1(8 - 1 downto 0);

    -- grp_fu_821_ce assign process. --
    grp_fu_821_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_821_ce <= ap_const_logic_1;
        else 
            grp_fu_821_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_821_p0 <= tmp_36_0_1_i_i_i_reg_1215(8 - 1 downto 0);
    grp_fu_821_p1 <= tmp_35_0_1_i_i_i_fu_818_p1(8 - 1 downto 0);

    -- grp_fu_826_ce assign process. --
    grp_fu_826_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_826_ce <= ap_const_logic_1;
        else 
            grp_fu_826_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_826_p0 <= tmp_38_0_1_i_i_i_reg_1220(8 - 1 downto 0);
    grp_fu_826_p1 <= tmp_35_0_1_i_i_i_fu_818_p1(8 - 1 downto 0);

    -- grp_fu_835_ce assign process. --
    grp_fu_835_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_835_ce <= ap_const_logic_1;
        else 
            grp_fu_835_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_835_p0 <= tmp_36_0_2_i_i_i_reg_1225(8 - 1 downto 0);
    grp_fu_835_p1 <= tmp_35_0_2_i_i_i_fu_831_p1(8 - 1 downto 0);

    -- grp_fu_840_ce assign process. --
    grp_fu_840_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_840_ce <= ap_const_logic_1;
        else 
            grp_fu_840_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_840_p0 <= tmp_38_0_2_i_i_i_reg_1230(8 - 1 downto 0);
    grp_fu_840_p1 <= tmp_35_0_2_i_i_i_fu_831_p1(8 - 1 downto 0);

    -- grp_fu_848_ce assign process. --
    grp_fu_848_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_848_ce <= ap_const_logic_1;
        else 
            grp_fu_848_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_848_p0 <= tmp_36_1_i_i_i_reg_1235(8 - 1 downto 0);
    grp_fu_848_p1 <= tmp_35_1_i_i_i_fu_845_p1(8 - 1 downto 0);

    -- grp_fu_853_ce assign process. --
    grp_fu_853_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_853_ce <= ap_const_logic_1;
        else 
            grp_fu_853_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_853_p0 <= tmp_38_1_i_i_i_reg_1240(8 - 1 downto 0);
    grp_fu_853_p1 <= tmp_35_1_i_i_i_fu_845_p1(8 - 1 downto 0);

    -- grp_fu_861_ce assign process. --
    grp_fu_861_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_861_ce <= ap_const_logic_1;
        else 
            grp_fu_861_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_861_p0 <= tmp_36_1_1_i_i_i_reg_1245(8 - 1 downto 0);
    grp_fu_861_p1 <= tmp_35_1_1_i_i_i_fu_858_p1(8 - 1 downto 0);

    -- grp_fu_866_ce assign process. --
    grp_fu_866_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_866_ce <= ap_const_logic_1;
        else 
            grp_fu_866_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_866_p0 <= tmp_38_1_1_i_i_i_reg_1250(8 - 1 downto 0);
    grp_fu_866_p1 <= tmp_35_1_1_i_i_i_fu_858_p1(8 - 1 downto 0);

    -- grp_fu_875_ce assign process. --
    grp_fu_875_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_875_ce <= ap_const_logic_1;
        else 
            grp_fu_875_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_875_p0 <= tmp_36_1_2_i_i_i_reg_1255(8 - 1 downto 0);
    grp_fu_875_p1 <= tmp_35_1_2_i_i_i_fu_871_p1(8 - 1 downto 0);

    -- grp_fu_880_ce assign process. --
    grp_fu_880_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_880_ce <= ap_const_logic_1;
        else 
            grp_fu_880_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_880_p0 <= tmp_38_1_2_i_i_i_reg_1260(8 - 1 downto 0);
    grp_fu_880_p1 <= tmp_35_1_2_i_i_i_fu_871_p1(8 - 1 downto 0);

    -- grp_fu_888_ce assign process. --
    grp_fu_888_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_888_ce <= ap_const_logic_1;
        else 
            grp_fu_888_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_888_p0 <= tmp_36_2_i_i_i_reg_1265(8 - 1 downto 0);
    grp_fu_888_p1 <= tmp_35_2_i_i_i_fu_885_p1(8 - 1 downto 0);

    -- grp_fu_893_ce assign process. --
    grp_fu_893_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_893_ce <= ap_const_logic_1;
        else 
            grp_fu_893_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_893_p0 <= tmp_38_2_i_i_i_reg_1270(8 - 1 downto 0);
    grp_fu_893_p1 <= tmp_35_2_i_i_i_fu_885_p1(8 - 1 downto 0);

    -- grp_fu_901_ce assign process. --
    grp_fu_901_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_901_ce <= ap_const_logic_1;
        else 
            grp_fu_901_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_901_p0 <= tmp_36_2_1_i_i_i_reg_1275(8 - 1 downto 0);
    grp_fu_901_p1 <= tmp_35_2_1_i_i_i_fu_898_p1(8 - 1 downto 0);

    -- grp_fu_906_ce assign process. --
    grp_fu_906_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_906_ce <= ap_const_logic_1;
        else 
            grp_fu_906_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_906_p0 <= tmp_38_2_1_i_i_i_reg_1280(8 - 1 downto 0);
    grp_fu_906_p1 <= tmp_35_2_1_i_i_i_fu_898_p1(8 - 1 downto 0);

    -- grp_fu_915_ce assign process. --
    grp_fu_915_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            grp_fu_915_ce <= ap_const_logic_1;
        else 
            grp_fu_915_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_915_p0 <= tmp_36_2_2_i_i_i_reg_1285(8 - 1 downto 0);
    grp_fu_915_p1 <= grp_fu_915_p10(8 - 1 downto 0);
    grp_fu_915_p10 <= std_logic_vector(resize(unsigned(buff_C_val_2_1_i_i_fu_148),16));
    icmp1_fu_718_p2 <= "1" when (tmp_25_fu_708_p4 = ap_const_lv11_0) else "0";
    icmp_fu_627_p2 <= "1" when (tmp_23_fu_617_p4 = ap_const_lv11_0) else "0";
    or_cond3_i_i_fu_677_p2 <= (tmp_34_i_i_reg_1314 and tmp_43_i_i_fu_671_p2);
    or_cond4_i_i_fu_771_p2 <= (tmp1_reg_1390 or tmp_reg_1385);
    or_cond_i_i_fu_666_p2 <= (tmp_37_i_i_fu_655_p2 and tmp_32_i_i_reg_1304);
    p_edge_val_i_i_i_fu_1078_p3 <= 
        ap_const_lv8_FF when (tmp_26_i_i_i_reg_1649(0) = '1') else 
        ap_const_lv8_0;
    row_cast_cast_i_i_fu_597_p1 <= std_logic_vector(resize(unsigned(row_i_i_reg_384),13));
    row_fu_606_p2 <= std_logic_vector(unsigned(row_i_i_reg_384) + unsigned(ap_const_lv12_1));
    rows_cast_i_i_cast_fu_415_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_407_p1),12));

    -- rows_read assign process. --
    rows_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_254)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_254))) then 
            rows_read <= ap_const_logic_1;
        else 
            rows_read <= ap_const_logic_0;
        end if; 
    end process;


    -- src_data_stream_0_V_read assign process. --
    src_data_stream_0_V_read_assign_proc : process(ap_reg_ppstg_exitcond_reg_1324_pp0_it2, ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_reg_ppstg_exitcond_reg_1324_pp0_it2 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it2)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- src_data_stream_1_V_read assign process. --
    src_data_stream_1_V_read_assign_proc : process(ap_reg_ppstg_exitcond_reg_1324_pp0_it2, ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it2, ap_sig_bdd_164, ap_reg_ppiten_pp0_it3, ap_sig_bdd_197, ap_reg_ppiten_pp0_it14)
    begin
        if (((ap_reg_ppstg_exitcond_reg_1324_pp0_it2 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1356_pp0_it2)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_164 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) or (ap_sig_bdd_197 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it14)))))) then 
            src_data_stream_1_V_read <= ap_const_logic_1;
        else 
            src_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_fu_963_p2 <= std_logic_vector(unsigned(tmp_39_1_1_i_i_i_reg_1539) + unsigned(tmp_39_1_2_i_i_i_reg_1549));
    tmp11_fu_967_p2 <= std_logic_vector(unsigned(tmp9_fu_959_p2) + unsigned(tmp10_fu_963_p2));
    tmp12_fu_973_p2 <= std_logic_vector(unsigned(tmp_39_0_i_i_i_reg_1499) + unsigned(tmp_39_0_1_i_i_i_reg_1509));
    tmp13_fu_977_p2 <= std_logic_vector(unsigned(tmp_37_2_2_i_i_i_reg_1574) + unsigned(tmp_39_0_2_i_i_i_reg_1519));
    tmp14_fu_981_p2 <= std_logic_vector(unsigned(tmp_39_1_i_i_i_reg_1529) + unsigned(tmp13_fu_977_p2));
    tmp15_fu_995_p2 <= std_logic_vector(unsigned(tmp12_reg_1600) + unsigned(tmp14_reg_1605));
    tmp1_fu_734_p2 <= (tmp_35_i_i_reg_1319 or tmp_42_i_i_fu_724_p2);
    tmp2_fu_932_p2 <= std_logic_vector(unsigned(tmp_37_2_1_i_i_i_reg_1564) + unsigned(tmp_37_2_i_i_i_reg_1554));
    tmp3_fu_936_p2 <= std_logic_vector(unsigned(tmp_37_1_1_i_i_i_reg_1534) + unsigned(tmp_37_1_2_i_i_i_reg_1544));
    tmp4_fu_940_p2 <= std_logic_vector(unsigned(tmp2_fu_932_p2) + unsigned(tmp3_fu_936_p2));
    tmp5_fu_946_p2 <= std_logic_vector(unsigned(tmp_37_0_i_i_i_reg_1494) + unsigned(tmp_37_0_1_i_i_i_reg_1504));
    tmp6_fu_950_p2 <= std_logic_vector(unsigned(tmp_37_2_2_i_i_i_reg_1574) + unsigned(tmp_37_0_2_i_i_i_reg_1514));
    tmp7_fu_954_p2 <= std_logic_vector(unsigned(tmp_37_1_i_i_i_reg_1524) + unsigned(tmp6_fu_950_p2));
    tmp8_fu_986_p2 <= std_logic_vector(unsigned(tmp5_reg_1585) + unsigned(tmp7_reg_1590));
    tmp9_fu_959_p2 <= std_logic_vector(unsigned(tmp_39_2_1_i_i_i_reg_1569) + unsigned(tmp_39_2_i_i_i_reg_1559));
    tmp_10_fu_471_p1 <= C_XR1C1_dout(8 - 1 downto 0);
    tmp_11_fu_475_p1 <= C_XR1C2_dout(8 - 1 downto 0);
    tmp_12_fu_479_p1 <= C_XR2C0_dout(8 - 1 downto 0);
    tmp_13_fu_483_p1 <= C_XR2C1_dout(8 - 1 downto 0);
    tmp_14_fu_487_p1 <= C_XR2C2_dout(8 - 1 downto 0);
    tmp_15_fu_491_p1 <= C_YR0C0_dout(8 - 1 downto 0);
    tmp_16_fu_495_p1 <= C_YR0C1_dout(8 - 1 downto 0);
    tmp_17_fu_499_p1 <= C_YR0C2_dout(8 - 1 downto 0);
    tmp_17_i_i_i_fu_1004_p2 <= "1" when (signed(x_weight_2_2_2_i_i_i_reg_1610) > signed(ap_const_lv16_0)) else "0";
    tmp_18_fu_503_p1 <= C_YR1C0_dout(8 - 1 downto 0);
    tmp_18_i_i_i_fu_1009_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(x_weight_2_2_2_i_i_i_reg_1610));
    tmp_19_fu_507_p1 <= C_YR1C1_dout(8 - 1 downto 0);
    tmp_19_i_i_i_fu_1014_p3 <= 
        x_weight_2_2_2_i_i_i_reg_1610 when (tmp_17_i_i_i_fu_1004_p2(0) = '1') else 
        tmp_18_i_i_i_fu_1009_p2;
    tmp_1_fu_407_p1 <= rows_dout(11 - 1 downto 0);
    tmp_20_fu_511_p1 <= C_YR1C2_dout(8 - 1 downto 0);
    tmp_20_i_i_i_fu_1021_p2 <= "1" when (signed(y_weight_2_2_2_i_i_i_reg_1617) > signed(ap_const_lv16_0)) else "0";
    tmp_21_fu_515_p1 <= C_YR2C0_dout(8 - 1 downto 0);
    tmp_21_i_i_i_fu_1026_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(y_weight_2_2_2_i_i_i_reg_1617));
    tmp_22_fu_519_p1 <= C_YR2C1_dout(8 - 1 downto 0);
    tmp_22_i_i_i_fu_1031_p3 <= 
        y_weight_2_2_2_i_i_i_reg_1617 when (tmp_20_i_i_i_fu_1021_p2(0) = '1') else 
        tmp_21_i_i_i_fu_1026_p2;
    tmp_23_fu_617_p4 <= row_i_i_reg_384(11 downto 1);
    tmp_23_i_i_i_fu_1042_p2 <= "1" when (signed(edge_weight_fu_1038_p2) < signed(ap_const_lv16_FF)) else "0";
    tmp_25_fu_708_p4 <= ap_reg_ppstg_col_assign_reg_395_pp0_it2(11 downto 1);
    tmp_25_i_i_i_fu_1064_p1 <= std_logic_vector(resize(unsigned(edge_val1_i_i_i_fu_1058_p3),32));
    tmp_26_fu_1048_p1 <= edge_weight_fu_1038_p2(8 - 1 downto 0);
    tmp_26_i_i_i_fu_1068_p2 <= "1" when (signed(tmp_25_i_i_i_fu_1064_p1) > signed(c_high_thresh_read_reg_1165)) else "0";
    tmp_27_i_i_i_fu_1073_p2 <= "1" when (signed(tmp_25_i_i_i_fu_1064_p1) < signed(c_low_thresh_read_reg_1170)) else "0";
    tmp_28_i_i_i_fu_591_p2 <= "1" when (c_invert_dout = ap_const_lv32_1) else "0";
        tmp_29_i_i_cast_fu_425_p1 <= std_logic_vector(resize(signed(tmp_29_i_i_fu_419_p2),13));

    tmp_29_i_i_fu_419_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(rows_cast_i_i_cast_fu_415_p1));
    tmp_2_fu_411_p1 <= cols_dout(11 - 1 downto 0);
        tmp_30_i_i_cast_fu_439_p1 <= std_logic_vector(resize(signed(tmp_30_i_i_fu_433_p2),13));

    tmp_30_i_i_fu_433_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(cols_cast_i_i_cast_fu_429_p1));
    tmp_32_i_i_fu_612_p2 <= "1" when (unsigned(row_i_i_reg_384) < unsigned(rows_cast_i_i_cast_reg_1175)) else "0";
    tmp_34_i_i_fu_633_p2 <= "0" when (row_i_i_reg_384 = ap_const_lv12_0) else "1";
    tmp_35_0_1_i_i_i_fu_818_p1 <= std_logic_vector(resize(unsigned(buff_C_val_0_0_i_i_load_1_reg_1401),16));
    tmp_35_0_2_i_i_i_fu_831_p1 <= std_logic_vector(resize(unsigned(buff_C_val_0_1_i_i_fu_132),16));
    tmp_35_0_i_i_i_fu_805_p1 <= std_logic_vector(resize(unsigned(buff_C_val_0_0_reg_1421),16));
    tmp_35_1_1_i_i_i_fu_858_p1 <= std_logic_vector(resize(unsigned(buff_C_val_1_0_i_i_load_1_reg_1406),16));
    tmp_35_1_2_i_i_i_fu_871_p1 <= std_logic_vector(resize(unsigned(buff_C_val_1_1_i_i_fu_144),16));
    tmp_35_1_i_i_i_fu_845_p1 <= std_logic_vector(resize(unsigned(buff_C_val_1_0_reg_1416),16));
    tmp_35_2_1_i_i_i_fu_898_p1 <= std_logic_vector(resize(unsigned(buff_C_val_2_1_reg_1395),16));
    tmp_35_2_i_i_i_fu_885_p1 <= std_logic_vector(resize(unsigned(buff_C_val_2_0_reg_1411),16));
    tmp_35_i_i_fu_639_p2 <= "1" when (signed(row_cast_cast_i_i_fu_597_p1) > signed(tmp_29_i_i_cast_reg_1180)) else "0";
        tmp_36_0_1_i_i_i_fu_531_p1 <= std_logic_vector(resize(signed(tmp_5_fu_459_p1),16));

        tmp_36_0_2_i_i_i_fu_539_p1 <= std_logic_vector(resize(signed(tmp_7_fu_463_p1),16));

        tmp_36_0_i_i_i_fu_523_p1 <= std_logic_vector(resize(signed(tmp_4_fu_455_p1),16));

        tmp_36_1_1_i_i_i_fu_555_p1 <= std_logic_vector(resize(signed(tmp_10_fu_471_p1),16));

        tmp_36_1_2_i_i_i_fu_563_p1 <= std_logic_vector(resize(signed(tmp_11_fu_475_p1),16));

        tmp_36_1_i_i_i_fu_547_p1 <= std_logic_vector(resize(signed(tmp_8_fu_467_p1),16));

        tmp_36_2_1_i_i_i_fu_579_p1 <= std_logic_vector(resize(signed(tmp_13_fu_483_p1),16));

        tmp_36_2_2_i_i_i_fu_587_p1 <= std_logic_vector(resize(signed(tmp_14_fu_487_p1),16));

        tmp_36_2_i_i_i_fu_571_p1 <= std_logic_vector(resize(signed(tmp_12_fu_479_p1),16));

    tmp_37_i_i_fu_655_p2 <= "1" when (unsigned(col_assign_phi_fu_399_p4) < unsigned(cols_cast_i_i_cast_reg_1185)) else "0";
        tmp_38_0_1_i_i_i_fu_535_p1 <= std_logic_vector(resize(signed(tmp_16_fu_495_p1),16));

        tmp_38_0_2_i_i_i_fu_543_p1 <= std_logic_vector(resize(signed(tmp_17_fu_499_p1),16));

        tmp_38_0_i_i_i_fu_527_p1 <= std_logic_vector(resize(signed(tmp_15_fu_491_p1),16));

        tmp_38_1_1_i_i_i_fu_559_p1 <= std_logic_vector(resize(signed(tmp_19_fu_507_p1),16));

        tmp_38_1_2_i_i_i_fu_567_p1 <= std_logic_vector(resize(signed(tmp_20_fu_511_p1),16));

        tmp_38_1_i_i_i_fu_551_p1 <= std_logic_vector(resize(signed(tmp_18_fu_503_p1),16));

        tmp_38_2_1_i_i_i_fu_583_p1 <= std_logic_vector(resize(signed(tmp_22_fu_519_p1),16));

        tmp_38_2_i_i_i_fu_575_p1 <= std_logic_vector(resize(signed(tmp_21_fu_515_p1),16));

    tmp_38_i_i_fu_660_p1 <= std_logic_vector(resize(unsigned(col_assign_phi_fu_399_p4),64));
    tmp_39_i_i_fu_690_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_col_assign_reg_395_pp0_it2),64));
    tmp_3_fu_443_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(cols_cast_i_i_cast_fu_429_p1));
    tmp_40_i_i_fu_703_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_col_assign_reg_395_pp0_it2),64));
    tmp_42_i_i_fu_724_p2 <= "1" when (signed(col_assign_cast_cast_i_i_fu_686_p1) > signed(tmp_30_i_i_cast_reg_1190)) else "0";
    tmp_43_i_i_fu_671_p2 <= "0" when (col_assign_phi_fu_399_p4 = ap_const_lv12_0) else "1";
    tmp_4_fu_455_p1 <= C_XR0C0_dout(8 - 1 downto 0);
    tmp_5_fu_459_p1 <= C_XR0C1_dout(8 - 1 downto 0);
    tmp_6_fu_449_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(rows_cast_i_i_cast_fu_415_p1));
    tmp_7_fu_463_p1 <= C_XR0C2_dout(8 - 1 downto 0);
    tmp_8_fu_467_p1 <= C_XR1C0_dout(8 - 1 downto 0);
    tmp_fu_729_p2 <= (icmp_reg_1309 or icmp1_fu_718_p2);
    tmp_s_fu_1085_p2 <= (tmp_26_i_i_i_reg_1649 or tmp_27_i_i_i_reg_1655);
    x_weight_2_2_2_i_i_i_fu_990_p2 <= std_logic_vector(unsigned(tmp4_reg_1580) + unsigned(tmp8_fu_986_p2));
    y_weight_2_2_2_i_i_i_fu_999_p2 <= std_logic_vector(unsigned(tmp11_reg_1595) + unsigned(tmp15_fu_995_p2));
end behav;
